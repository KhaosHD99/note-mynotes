<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0073)http://pubs.opengroup.org/onlinepubs/007904875/basedefs/sys/socket.h.html -->
<HTML><HEAD><TITLE><sys/socket.h></TITLE>
<META content="MSHTML 6.00.2900.6129" name=GENERATOR>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><LINK 
href="sys-socket.files/style.css" type=text/css rel=stylesheet><!-- Generated by The Open Group's rhtm tool v1.2.1 --><!-- Copyright (c) 2001-2004 IEEE and The Open Group, All Rights Reserved --></HEAD>
<BODY bgColor=white>
<SCRIPT language=JavaScript src="sys-socket.files/dotcode.js" 
type=text/javascript>
</SCRIPT>
<BASEFONT><A name="<sys/socket.h>"></A><A name=tag_13_61></A><!-- &lt;sys/socket.h&gt; --><!--header start-->
<CENTER><FONT size=2>The Open Group Base Specifications Issue 6<BR>IEEE Std 
1003.1, 2004 Edition<BR>Copyright © 2001-2004 The IEEE and The Open Group, All 
Rights reserved.</FONT></CENTER><!--header end-->
<HR noShade SIZE=2>

<H4><A name=tag_13_61_01></A>NAME</H4>
<BLOCKQUOTE>sys/socket.h - main sockets header</BLOCKQUOTE>
<H4><A name=tag_13_61_02></A>SYNOPSIS</H4>
<BLOCKQUOTE class=synopsis>
  <P><TT>#include &lt;sys/socket.h&gt;</TT></P></BLOCKQUOTE>
<H4><A name=tag_13_61_03></A>DESCRIPTION</H4>
<BLOCKQUOTE>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the type 
  <B>socklen_t</B>, which is an integer type of width of at least 32 bits; see 
  APPLICATION USAGE.</P>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the unsigned integer 
  type <B>sa_family_t</B>.</P>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the <B>sockaddr</B> 
  structure that includes at least the following members:</P><PRE><TT>sa_family_t  sa_family </TT> Address family. <TT>
char         sa_data[] </TT> Socket address (variable-length data). <TT>
</TT>
</PRE>
  <P>The <B>sockaddr</B> structure is used to define a socket address which is 
  used in the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/bind.html"><I>bind</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/connect.html"><I>connect</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getpeername.html"><I>getpeername</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockname.html"><I>getsockname</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvfrom.html"><I>recvfrom</I>()</A>, 
  and <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendto.html"><I>sendto</I>()</A> 
  functions.</P>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the 
  <B>sockaddr_storage</B> structure. This structure shall be:</P>
  <UL>
    <LI>
    <P>Large enough to accommodate all supported protocol-specific address 
    structures</P>
    <LI>
    <P>Aligned at an appropriate boundary so that pointers to it can be cast as 
    pointers to protocol-specific address structures and used to access the 
    fields of those structures without alignment problems</P></LI></UL>
  <P>The <B>sockaddr_storage</B> structure shall contain at least the following 
  members:</P><PRE><TT>sa_family_t   ss_family
</TT>
</PRE>
  <P>When a <B>sockaddr_storage</B> structure is cast as a <B>sockaddr</B> 
  structure, the <I>ss_family</I> field of the <B>sockaddr_storage</B> structure 
  shall map onto the <I>sa_family</I> field of the <B>sockaddr</B> structure. 
  When a <B>sockaddr_storage</B> structure is cast as a protocol-specific 
  address structure, the <I>ss_family</I> field shall map onto a field of that 
  structure that is of type <B>sa_family_t</B> and that identifies the 
  protocol's address family.</P>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the <B>msghdr</B> 
  structure that includes at least the following members:</P><PRE><TT>void          *msg_name       </TT> Optional address. <TT>
socklen_t      msg_namelen    </TT> Size of address. <TT>
struct iovec  *msg_iov        </TT> Scatter/gather array. <TT>
int            msg_iovlen     </TT> Members in <I>msg_iov</I>. <TT>
void          *msg_control    </TT> Ancillary data; see below. <TT>
socklen_t      msg_controllen </TT> Ancillary data buffer <I>len</I>. <TT>
int            msg_flags      </TT> Flags on received message. <TT>
</TT>
</PRE>
  <P>The <B>msghdr</B> structure is used to minimize the number of directly 
  supplied parameters to the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvmsg.html"><I>recvmsg</I>()</A> 
  and <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendmsg.html"><I>sendmsg</I>()</A> 
  functions. This structure is used as a <I>value</I>- <I>result</I> parameter 
  in the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvmsg.html"><I>recvmsg</I>()</A> 
  function and <I>value</I> only for the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendmsg.html"><I>sendmsg</I>()</A> 
  function.</P>
  <P>The <B>iovec</B> structure shall be defined as described in <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/basedefs/sys/uio.h.html#tag_13_68"><I>&lt;sys/uio.h&gt;</I></A> 
  .</P>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the <B>cmsghdr</B> 
  structure that includes at least the following members:</P><PRE><TT>socklen_t  cmsg_len   </TT> Data byte count, including the <B>cmsghdr</B>. <TT>
int        cmsg_level </TT> Originating protocol. <TT>
int        cmsg_type  </TT> Protocol-specific type. <TT>
</TT>
</PRE>
  <P>The <B>cmsghdr</B> structure is used for storage of ancillary data object 
  information.</P>
  <P>Ancillary data consists of a sequence of pairs, each consisting of a 
  <B>cmsghdr</B> structure followed by a data array. The data array contains the 
  ancillary data message, and the <B>cmsghdr</B> structure contains descriptive 
  information that allows an application to correctly parse the data.</P>
  <P>The values for <I>cmsg_level</I> shall be legal values for the <I>level</I> 
  argument to the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockopt.html"><I>getsockopt</I>()</A> 
  and <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/setsockopt.html"><I>setsockopt</I>()</A> 
  functions. The system documentation shall specify the <I>cmsg_type</I> 
  definitions for the supported protocols.</P>
  <P>Ancillary data is also possible at the socket level. The 
  <I>&lt;sys/socket.h&gt;</I> header defines the following macro for use as the 
  <I>cmsg_type</I> value when <I>cmsg_level</I> is SOL_SOCKET:</P>
  <DL compact>
    <DT>SCM_RIGHTS 
    <DD>Indicates that the data array contains the access rights to be sent or 
    received. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header defines the following macros to gain 
  access to the data arrays in the ancillary data associated with a message 
  header:</P>
  <DL compact>
    <DT>CMSG_DATA(<I>cmsg</I>) 
    <DD><BR>If the argument is a pointer to a <B>cmsghdr</B> structure, this 
    macro shall return an unsigned character pointer to the data array 
    associated with the <B>cmsghdr</B> structure. 
    <DT>CMSG_NXTHDR(<I>mhdr,cmsg</I>) 
    <DD><BR>If the first argument is a pointer to a <B>msghdr</B> structure and 
    the second argument is a pointer to a <B>cmsghdr</B> structure in the 
    ancillary data pointed to by the <I>msg_control</I> field of that 
    <B>msghdr</B> structure, this macro shall return a pointer to the next 
    <B>cmsghdr</B> structure, or a null pointer if this structure is the last 
    <B>cmsghdr</B> in the ancillary data. 
    <DT>CMSG_FIRSTHDR(<I>mhdr</I>) 
    <DD><BR>If the argument is a pointer to a <B>msghdr</B> structure, this 
    macro shall return a pointer to the first <B>cmsghdr</B> structure in the 
    ancillary data associated with this <B>msghdr</B> structure, or a null 
    pointer if there is no ancillary data associated with the <B>msghdr</B> 
    structure. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the <B>linger</B> 
  structure that includes at least the following members:</P><PRE><TT>int  l_onoff  </TT> Indicates whether linger option is enabled. <TT>
int  l_linger </TT> Linger time, in seconds. <TT>
</TT>
</PRE>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macros, 
  with distinct integer values:</P>
  <DL compact>
    <DT>SOCK_DGRAM 
    <DD>Datagram socket. 
    <DT>SOCK_RAW 
    <DD><SUP>[<A href="javascript:open_code('RS')">RS</A>]</SUP> <IMG 
    alt="[Option Start]" src="sys-socket.files/opt-start.gif" border=0> Raw 
    Protocol Interface. <IMG alt="[Option End]" 
    src="sys-socket.files/opt-end.gif" border=0> 
    <DT>SOCK_SEQPACKET 
    <DD>Sequenced-packet socket. 
    <DT>SOCK_STREAM 
    <DD>Byte-stream socket. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macro for 
  use as the <I>level</I> argument of <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/setsockopt.html"><I>setsockopt</I>()</A> 
  and <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockopt.html"><I>getsockopt</I>()</A>.</P>
  <DL compact>
    <DT>SOL_SOCKET 
    <DD>Options to be accessed at socket level, not protocol level. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macros, 
  with distinct integer values, for use as the <I>option_name</I> argument in <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockopt.html"><I>getsockopt</I>()</A> 
  or <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/setsockopt.html"><I>setsockopt</I>()</A> 
  calls:</P>
  <DL compact>
    <DT>SO_ACCEPTCONN 
    <DD>Socket is accepting connections. 
    <DT>SO_BROADCAST 
    <DD>Transmission of broadcast messages is supported. 
    <DT>SO_DEBUG 
    <DD>Debugging information is being recorded. 
    <DT>SO_DONTROUTE 
    <DD>Bypass normal routing. 
    <DT>SO_ERROR 
    <DD>Socket error status. 
    <DT>SO_KEEPALIVE 
    <DD>Connections are kept alive with periodic messages. 
    <DT>SO_LINGER 
    <DD>Socket lingers on close. 
    <DT>SO_OOBINLINE 
    <DD>Out-of-band data is transmitted in line. 
    <DT>SO_RCVBUF 
    <DD>Receive buffer size. 
    <DT>SO_RCVLOWAT 
    <DD>Receive ``low water mark''. 
    <DT>SO_RCVTIMEO 
    <DD>Receive timeout. 
    <DT>SO_REUSEADDR 
    <DD>Reuse of local addresses is supported. 
    <DT>SO_SNDBUF 
    <DD>Send buffer size. 
    <DT>SO_SNDLOWAT 
    <DD>Send ``low water mark''. 
    <DT>SO_SNDTIMEO 
    <DD>Send timeout. 
    <DT>SO_TYPE 
    <DD>Socket type. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macro as 
  the maximum <I>backlog</I> queue length which may be specified by the 
  <I>backlog</I> field of the <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/listen.html"><I>listen</I>()</A> 
  function:</P>
  <DL compact>
    <DT>SOMAXCONN 
    <DD>The maximum <I>backlog</I> queue length. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macros, 
  with distinct integer values, for use as the valid values for the 
  <I>msg_flags</I> field in the <B>msghdr</B> structure, or the <I>flags</I> 
  parameter in <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvfrom.html"><I>recvfrom</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvmsg.html"><I>recvmsg</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendmsg.html"><I>sendmsg</I>()</A>, 
  or <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendto.html"><I>sendto</I>()</A> 
  calls:</P>
  <DL compact>
    <DT>MSG_CTRUNC 
    <DD>Control data truncated. 
    <DT>MSG_DONTROUTE 
    <DD>Send without using routing tables. 
    <DT>MSG_EOR 
    <DD>Terminates a record (if supported by the protocol). 
    <DT>MSG_OOB 
    <DD>Out-of-band data. 
    <DT>MSG_PEEK 
    <DD>Leave received data in queue. 
    <DT>MSG_TRUNC 
    <DD>Normal data truncated. 
    <DT>MSG_WAITALL 
    <DD>Attempt to fill the read buffer. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macros, 
  with distinct integer values:</P>
  <DL compact>
    <DT>AF_INET 
    <DD>Internet domain sockets for use with IPv4 addresses. 
    <DT>AF_INET6 
    <DD><SUP>[<A href="javascript:open_code('IP6')">IP6</A>]</SUP> <IMG 
    alt="[Option Start]" src="sys-socket.files/opt-start.gif" border=0> Internet 
    domain sockets for use with IPv6 addresses. <IMG alt="[Option End]" 
    src="sys-socket.files/opt-end.gif" border=0> 
    <DT>AF_UNIX 
    <DD>UNIX domain sockets. 
    <DT>AF_UNSPEC 
    <DD>Unspecified. </DD></DL>
  <P>The <I>&lt;sys/socket.h&gt;</I> header shall define the following macros, 
  with distinct integer values:</P>
  <DL compact>
    <DT>SHUT_RD 
    <DD>Disables further receive operations. 
    <DT>SHUT_RDWR 
    <DD>Disables further send and receive operations. 
    <DT>SHUT_WR 
    <DD>Disables further send operations. </DD></DL>
  <P>The following shall be declared as functions and may also be defined as 
  macros. Function prototypes shall be provided.</P><PRE><TT>int     accept(int, struct sockaddr *restrict, socklen_t *restrict);
int     bind(int, const struct sockaddr *, socklen_t);
int     connect(int, const struct sockaddr *, socklen_t);
int     getpeername(int, struct sockaddr *restrict, socklen_t *restrict);
int     getsockname(int, struct sockaddr *restrict, socklen_t *restrict);
int     getsockopt(int, int, int, void *restrict, socklen_t *restrict);
int     listen(int, int);
ssize_t recv(int, void *, size_t, int);
ssize_t recvfrom(int, void *restrict, size_t, int,
        struct sockaddr *restrict, socklen_t *restrict);
ssize_t recvmsg(int, struct msghdr *, int);
ssize_t send(int, const void *, size_t, int);
ssize_t sendmsg(int, const struct msghdr *, int);
ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *,
        socklen_t);
int     setsockopt(int, int, int, const void *, socklen_t);
int     shutdown(int, int);
int     socket(int, int, int);
int     sockatmark(int);
int     socketpair(int, int, int, int[2]);
</TT>
</PRE>
  <P>Inclusion of <I>&lt;sys/socket.h&gt;</I> may also make visible all symbols 
  from <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/basedefs/sys/uio.h.html"><I>&lt;sys/uio.h&gt;</I></A>.</P></BLOCKQUOTE>
<HR>

<DIV class=box><EM>The following sections are informative.</EM></DIV>
<H4><A name=tag_13_61_04></A>APPLICATION USAGE</H4>
<BLOCKQUOTE>
  <P>To forestall portability problems, it is recommended that applications not 
  use values larger than 2<SUP><SMALL>31</SMALL></SUP> -1 for the 
  <B>socklen_t</B> type.</P>
  <P>The <B>sockaddr_storage</B> structure solves the problem of declaring 
  storage for automatic variables which is both large enough and aligned enough 
  for storing the socket address data structure of any family. For example, code 
  with a file descriptor and without the context of the address family can pass 
  a pointer to a variable of this type, where a pointer to a socket address 
  structure is expected in calls such as <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getpeername.html"><I>getpeername</I>()</A>, 
  and determine the address family by accessing the received content after the 
  call.</P>
  <P>The example below illustrates a data structure which aligns on a 64-bit 
  boundary. An implementation-defined field <I>_ss_align</I> following 
  <I>_ss_pad1</I> is used to force a 64-bit alignment which covers proper 
  alignment good enough for needs of at least <B>sockaddr_in6</B> (IPv6) and 
  <B>sockaddr_in</B> (IPv4) address data structures. The size of padding field 
  <I>_ss_pad1</I> depends on the chosen alignment boundary. The size of padding 
  field <I>_ss_pad2</I> depends on the value of overall size chosen for the 
  total size of the structure. This size and alignment are represented in the 
  above example by implementation-defined (not required) constants _SS_MAXSIZE 
  (chosen value 128) and _SS_ALIGNMENT (with chosen value 8). Constants 
  _SS_PAD1SIZE (derived value 6) and _SS_PAD2SIZE (derived value 112) are also 
  for illustration and not required. The implementation-defined definitions and 
  structure field names above start with an underscore to denote implementation 
  private name space. Portable code is not expected to access or reference those 
  fields or constants.</P><PRE><TT>/*
 *  Desired design of maximum size and alignment.
 */
#define _SS_MAXSIZE 128
    /* Implementation-defined maximum size. */
#define _SS_ALIGNSIZE (sizeof(int64_t))
    /* Implementation-defined desired alignment. */
<BR>
/*
 *  Definitions used for sockaddr_storage structure paddings design.
 */
#define _SS_PAD1SIZE (_SS_ALIGNSIZE - sizeof(sa_family_t))
#define _SS_PAD2SIZE (_SS_MAXSIZE - (sizeof(sa_family_t)+ \
                      _SS_PAD1SIZE + _SS_ALIGNSIZE))
struct sockaddr_storage {
    sa_family_t  ss_family;  /* Address family. */
/*
 *  Following fields are implementation-defined.
 */
    char _ss_pad1[_SS_PAD1SIZE];
        /* 6-byte pad; this is to make implementation-defined
           pad up to alignment field that follows explicit in
           the data structure. */
    int64_t _ss_align;  /* Field to force desired structure
                           storage alignment. */
    char _ss_pad2[_SS_PAD2SIZE];
        /* 112-byte pad to achieve desired size,
           _SS_MAXSIZE value minus size of ss_family
           __ss_pad1, __ss_align fields is 112. */
};
</TT>
</PRE></BLOCKQUOTE>
<H4><A name=tag_13_61_05></A>RATIONALE</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_13_61_06></A>FUTURE DIRECTIONS</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_13_61_07></A>SEE ALSO</H4>
<BLOCKQUOTE>
  <P><A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/basedefs/sys/uio.h.html#tag_13_68"><I>&lt;sys/uio.h&gt;</I></A>, 
  the System Interfaces volume of IEEE&nbsp;Std&nbsp;1003.1-2001, <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/accept.html"><I>accept</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/bind.html"><I>bind</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/connect.html"><I>connect</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getpeername.html"><I>getpeername</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockname.html"><I>getsockname</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockopt.html"><I>getsockopt</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/listen.html"><I>listen</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recv.html"><I>recv</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvfrom.html"><I>recvfrom</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvmsg.html"><I>recvmsg</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/send.html"><I>send</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendmsg.html"><I>sendmsg</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/sendto.html"><I>sendto</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/setsockopt.html"><I>setsockopt</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/shutdown.html"><I>shutdown</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/socket.html"><I>socket</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/socketpair.html"><I>socketpair</I>()</A></P></BLOCKQUOTE>
<H4><A name=tag_13_61_08></A>CHANGE HISTORY</H4>
<BLOCKQUOTE>
  <P>First released in Issue 6. Derived from the XNS, Issue 5.2 
  specification.</P>
  <P>The <B>restrict</B> keyword is added to the prototypes for <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/accept.html"><I>accept</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getpeername.html"><I>getpeername</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockname.html"><I>getsockname</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/getsockopt.html"><I>getsockopt</I>()</A>, 
  and <A 
  href="http://pubs.opengroup.org/onlinepubs/007904875/functions/recvfrom.html"><I>recvfrom</I>()</A>.</P></BLOCKQUOTE>
<DIV class=box><EM>End of informative text.</EM></DIV>
<HR noShade SIZE=2>

<CENTER><FONT size=2><!--footer start-->UNIX ® is a registered Trademark of The 
Open Group.<BR>POSIX ® is a registered Trademark of The IEEE.<BR>[ <A 
href="http://pubs.opengroup.org/onlinepubs/007904875/mindex.html">Main Index</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/007904875/basedefs/contents.html">XBD</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/007904875/utilities/contents.html">XCU</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/007904875/functions/contents.html">XSH</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/007904875/xrat/contents.html">XRAT</A> 
]</FONT></CENTER><!--footer end-->
<HR noShade SIZE=2>
</BASEFONT></BODY></HTML>
