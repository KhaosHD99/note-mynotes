<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0066)http://pubs.opengroup.org/onlinepubs/009695399/functions/bind.html -->
<HTML><HEAD><TITLE>bind</TITLE>
<META content="MSHTML 6.00.2900.6129" name=GENERATOR>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><LINK 
href="bind.files/style.css" type=text/css rel=stylesheet><!-- Generated by The Open Group's rhtm tool v1.2.1 --><!-- Copyright (c) 2001-2004 IEEE and The Open Group, All Rights Reserved --></HEAD>
<BODY bgColor=white><BASEFONT><A name=bind></A><A name=tag_03_39></A><!-- bind --><!--header start-->
<CENTER><FONT size=2>The Open Group Base Specifications Issue 6<BR>IEEE Std 
1003.1, 2004 Edition<BR>Copyright © 2001-2004 The IEEE and The Open Group, All 
Rights reserved.</FONT></CENTER><!--header end-->
<HR noShade SIZE=2>

<H4><A name=tag_03_39_01></A>NAME</H4>
<BLOCKQUOTE>bind - bind a name to a socket</BLOCKQUOTE>
<H4><A name=tag_03_39_02></A>SYNOPSIS</H4>
<BLOCKQUOTE class=synopsis>
  <P><CODE><TT>#include &lt;<A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/sys/socket.h.html">sys/socket.h</A>&gt;<BR><BR>int 
  bind(int</TT> <I>socket</I><TT>, const struct sockaddr 
  *</TT><I>address</I><TT>,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  socklen_t</TT> <I>address_len</I><TT>);<BR></TT></CODE></P></BLOCKQUOTE>
<H4><A name=tag_03_39_03></A>DESCRIPTION</H4>
<BLOCKQUOTE>
  <P>The <I>bind</I>() function shall assign a local socket address 
  <I>address</I> to a socket identified by descriptor <I>socket</I> that has no 
  local socket address assigned. Sockets created with the <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/socket.html"><I>socket</I>()</A> 
  function are initially unnamed; they are identified only by their address 
  family.</P>
  <P>The <I>bind</I>() function takes the following arguments:</P>
  <DL compact>
    <DT><I>socket</I> 
    <DD>Specifies the file descriptor of the socket to be bound. 
    <DT><I>address</I> 
    <DD>Points to a <B>sockaddr</B> structure containing the address to be bound 
    to the socket. The length and format of the address depend on the address 
    family of the socket. 
    <DT><I>address_len</I> 
    <DD>Specifies the length of the <B>sockaddr</B> structure pointed to by the 
    <I>address</I> argument. </DD></DL>
  <P>The socket specified by <I>socket</I> may require the process to have 
  appropriate privileges to use the <I>bind</I>() function.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_04></A>RETURN VALUE</H4>
<BLOCKQUOTE>
  <P>Upon successful completion, <I>bind</I>() shall return 0; otherwise, -1 
  shall be returned and <I>errno</I> set to indicate the error.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_05></A>ERRORS</H4>
<BLOCKQUOTE>
  <P>The <I>bind</I>() function shall fail if:</P>
  <DL compact>
    <DT>[EADDRINUSE] 
    <DD>The specified address is already in use. 
    <DT>[EADDRNOTAVAIL] 
    <DD>The specified address is not available from the local machine. 
    <DT>[EAFNOSUPPORT] 
    <DD>The specified address is not a valid address for the address family of 
    the specified socket. 
    <DT>[EBADF] 
    <DD>The <I>socket</I> argument is not a valid file descriptor. 
    <DT>[EINVAL] 
    <DD>The socket is already bound to an address, and the protocol does not 
    support binding to a new address; or the socket has been shut down. 
    <DT>[ENOTSOCK] 
    <DD>The <I>socket</I> argument does not refer to a socket. 
    <DT>[EOPNOTSUPP] 
    <DD>The socket type of the specified socket does not support binding to an 
    address. </DD></DL>
  <P>If the address family of the socket is AF_UNIX, then <I>bind</I>() shall 
  fail if:</P>
  <DL compact>
    <DT>[EACCES] 
    <DD>A component of the path prefix denies search permission, or the 
    requested name requires writing in a directory with a mode that denies write 
    permission. 
    <DT>[EDESTADDRREQ] or [EISDIR] 
    <DD>The <I>address</I> argument is a null pointer. 
    <DT>[EIO] 
    <DD>An I/O error occurred. 
    <DT>[ELOOP] 
    <DD>A loop exists in symbolic links encountered during resolution of the 
    pathname in <I>address</I>. 
    <DT>[ENAMETOOLONG] 
    <DD>A component of a pathname exceeded {NAME_MAX} characters, or an entire 
    pathname exceeded {PATH_MAX} characters. 
    <DT>[ENOENT] 
    <DD>A component of the pathname does not name an existing file or the 
    pathname is an empty string. 
    <DT>[ENOTDIR] 
    <DD>A component of the path prefix of the pathname in <I>address</I> is not 
    a directory. 
    <DT>[EROFS] 
    <DD>The name would reside on a read-only file system. </DD></DL>
  <P>The <I>bind</I>() function may fail if:</P>
  <DL compact>
    <DT>[EACCES] 
    <DD>The specified address is protected and the current user does not have 
    permission to bind to it. 
    <DT>[EINVAL] 
    <DD>The <I>address_len</I> argument is not a valid length for the address 
    family. 
    <DT>[EISCONN] 
    <DD>The socket is already connected. 
    <DT>[ELOOP] 
    <DD>More than {SYMLOOP_MAX} symbolic links were encountered during 
    resolution of the pathname in <I>address</I>. 
    <DT>[ENAMETOOLONG] 
    <DD>Pathname resolution of a symbolic link produced an intermediate result 
    whose length exceeds {PATH_MAX}. 
    <DT>[ENOBUFS] 
    <DD>Insufficient resources were available to complete the call. 
</DD></DL></BLOCKQUOTE>
<HR>

<DIV class=box><EM>The following sections are informative.</EM></DIV>
<H4><A name=tag_03_39_06></A>EXAMPLES</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_07></A>APPLICATION USAGE</H4>
<BLOCKQUOTE>
  <P>An application program can retrieve the assigned socket name with the <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/getsockname.html"><I>getsockname</I>()</A> 
  function.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_08></A>RATIONALE</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_09></A>FUTURE DIRECTIONS</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_39_10></A>SEE ALSO</H4>
<BLOCKQUOTE>
  <P><A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/connect.html"><I>connect</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/getsockname.html"><I>getsockname</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/listen.html"><I>listen</I>()</A>, 
  <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/functions/socket.html"><I>socket</I>()</A>, 
  the Base Definitions volume of IEEE&nbsp;Std&nbsp;1003.1-2001, <A 
  href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/sys/socket.h.html"><I>&lt;sys/socket.h&gt;</I></A></P></BLOCKQUOTE>
<H4><A name=tag_03_39_11></A>CHANGE HISTORY</H4>
<BLOCKQUOTE>
  <P>First released in Issue 6. Derived from the XNS, Issue 5.2 
  specification.</P></BLOCKQUOTE>
<DIV class=box><EM>End of informative text.</EM></DIV>
<HR noShade SIZE=2>

<CENTER><FONT size=2><!--footer start-->UNIX ® is a registered Trademark of The 
Open Group.<BR>POSIX ® is a registered Trademark of The IEEE.<BR>[ <A 
href="http://pubs.opengroup.org/onlinepubs/009695399/mindex.html">Main Index</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/contents.html">XBD</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/009695399/utilities/contents.html">XCU</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/009695399/functions/contents.html">XSH</A> 
| <A 
href="http://pubs.opengroup.org/onlinepubs/009695399/xrat/contents.html">XRAT</A> 
]</FONT></CENTER><!--footer end-->
<HR noShade SIZE=2>
</BASEFONT></BODY></HTML>
